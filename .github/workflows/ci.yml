name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml
          file_or_dir: ./apps

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.50.3

      - name: TFLint recursive
        run: tflint --recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ansible-lint
        run: pip install ansible-lint

      - name: Run Ansible Lint
        run: ansible-lint

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        run: flake8 tools/homelab-importer/

  test-infra:
    name: Test Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup OpenTofu
        uses: opentofu/setup-tofu@v1
        with:
          tofu_version: latest

      - name: Run Go tests
        working-directory: ./infrastructure/proxmox/test
        run: go test -v ./...

  test-python:
    name: Test Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install coverage
      - name: Run Python tests with coverage
        run: |
          cd tools/homelab-importer
          coverage run -m unittest discover tests/
          coverage report

  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform -chdir=infrastructure/proxmox init -backend=false
      - name: Terraform Validate
        run: terraform -chdir=infrastructure/proxmox validate

  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: infrastructure/proxmox

  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        with:
          config_path: .gitea/gitleaks.toml
          report_format: json
          report_path: gitleaks-report.json

  ansible-molecule:
    name: Ansible Molecule
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test dependencies.
        run: pip install ansible molecule molecule-docker
      - name: Run Molecule tests.
        run: |
          for role in ansible/roles/*; do
            if [ -d "$role/molecule" ]; then
              cd "$role"
              molecule test -s default
              cd -
            fi
          done
