name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        run: terraform fmt --check

      - name: TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.46.1

      - name: TFLint recursive
        run: tflint --recursive

  plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Post plan to PR
        uses: actions/github-script@v6
        with:
          script: |
            const output = `#### Terraform Plan ####
            \`\`\`hcl
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform workspace select
        run: terraform workspace select dev

      - name: Terraform apply
        run: terraform apply -auto-approve
